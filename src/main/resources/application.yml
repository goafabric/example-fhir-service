#web
server:
  port: 50700
  tomcat.threads.max: 20

#monitoring
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "health,prometheus,heapdump"
  health:
    circuitbreakers:
      enabled: true

security:
  authentication:
    enabled: true

#hapi
hapi:
  fhir:
    server:
      path: /fhir/*
    rest:
      server-name: example-fhir-facade
      server-version: 1.0.0
      implementation-description: example-fhir-facade
      default-response-encoding: xml
      e-tag-support: enabled
      default-pretty-print: true
    validation:
      enabled: true
      request-only: true


#adapter
adapter:
  timeout: 10000
  personservice:
    url: http://localhost:50800
    user: YWRtaW4=
    password: YWRtaW4=

resilience4j.circuitbreaker:
  configs:
    default:
      #see for more informations under: https://resilience4j.readme.io/docs/circuitbreaker
      registerHealthIndicator: true
      slowCallDurationThreshold: ${adapter.timeout} #Effectively the timeout
      slowCallRateThreshold: 100 #Percentage of calls that that need be registered a slow for the CB to transitions from close to open
      failureRateThreshold: 50 #Failure rate when the Circuit Breaker transitions from closed to open
      waitDurationInOpenState: 30s #Time the CircuitBreaker should wait before transitioning back from open to half-open.
      minimumNumberOfCalls: 10 #The minimum number of calls which are required before the CircuitBreaker can calculate the error rate.
      permittedNumberOfCallsInHalfOpenState: 10 #Number of permitted calls when the CircuitBreaker is half open.
#  instances:
#    personservice:
#      baseConfig: default

#log levels
logging.level.root: "WARN"
logging.level.org.goafabric: "INFO"

logging.level.org.springframework: "INFO"
logging.level.org.flywaydb.core: "INFO"
logging.level.org.hibernate.SQL: "INFO"

#logging.pattern.console: "%white(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable"
