version: "3.7"

services:
  fhir-facade:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    command: ["-Xmx${_Values_resources_requests_memory}"]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      - TZ=Europe/Berlin
      - server.port=${_Values_service_port}
      - tomcat.max-threads=20
      - security.authentication.enabled=true
      #monitoring
      - management.endpoint.health.show-details=always
      - management.endpoints.web.exposure.include=health,prometheus,heapdump
      #adapter
      - adapter.personservice.user=YWRtaW4=
      - adapter.personservice.password=YWRtaW4=
      - adapter.timeout=10000
      #multi tenancy
      - spring.profiles.active=remote
      - multi.tenancy.enabled=true
      - adapter.personservice.url=http://person-service-application-example-tenant-%TENANT_ID%:50800
    depends_on:
      - person-service-application-example-tenant-0
      - person-service-application-example-tenant-5a2f


  person-service-application-example-tenant-0:
    container_name: person-service-application-example-tenant-0
    image:  goafabric/person-service-native${_Values_server_arch}:3.0.0
    restart: 'no'
    ports:
      - "50800"
    command: ["-Xmx32M"]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net #example-tenant-0
    environment:
      #application
      - TZ=Europe/Berlin
      - server.port=50800
      - server.tomcat.threads.max=20
      - security.authentication.enabled=false
      #forwarding sub url
      - server.forward-headers-strategy=FRAMEWORK
      #monitoring
      - management.endpoint.health.show-details=always
      - management.endpoints.web.exposure.include=health,prometheus,heapdump
      #zipkin / jaeger
      - management.zipkin.tracing.endpoint=http://host.docker.internal:9411/api/v2/spans
      - spring.application.name=person-service
      #persistence
      - database.provisioning.goals=-import-demo-data
      #adapter
      - adapter.calleeservice.url=http://host.docker.internal:50900
      - adapter.calleeservice.user=YWRtaW4=
      - adapter.calleeservice.password=YWRtaW4=
      - adapter.timeout=10000

  person-service-application-example-tenant-5a2f:
    container_name: person-service-application-example-tenant-5a2f
    image: goafabric/person-service-native${_Values_server_arch}:3.0.0
    restart: 'no'
    ports:
      - "50800"
    command: [ "-Xmx32M" ]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net #example-tenant-0
    environment:
      #application
      - TZ=Europe/Berlin
      - server.port=50800
      - server.tomcat.threads.max=20
      - security.authentication.enabled=false
      #forwarding sub url
      - server.forward-headers-strategy=FRAMEWORK
      #monitoring
      - management.endpoint.health.show-details=always
      - management.endpoints.web.exposure.include=health,prometheus,heapdump
      #zipkin / jaeger
      - management.zipkin.tracing.endpoint=http://host.docker.internal:9411/api/v2/spans
      - spring.application.name=person-service
      #persistence
      - database.provisioning.goals=-import-demo-data
      #adapter
      - adapter.calleeservice.url=http://host.docker.internal:50900
      - adapter.calleeservice.user=YWRtaW4=
      - adapter.calleeservice.password=YWRtaW4=
      - adapter.timeout=10000

  nginx:
    container_name: ${_Values_root_name}-nginx
    image: nginx:1.20.2
    restart: 'no'
    ports:
      - 8082:80
    networks:
      - ${_Values_root_name}-net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fhir-facade

volumes:
    tmp:
    applogs:

networks:
  fhir-facade-net:
    driver: bridge
