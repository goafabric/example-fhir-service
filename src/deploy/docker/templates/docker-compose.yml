version: "3.7"

services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    command: ["-Xmx${_Values_resources_requests_memory}"]

    healthcheck:
      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
      disable: ${_Values_health_check_disabled} #disabled for native images because of no curl
      interval: 10s
      timeout: 10s
      retries: 5

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "${_Values_service_port}"
      server.tomcat.threads.max: "20"

      #security
      security.authentication.enabled: "false"

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.zipkin.baseUrl: "http://${_Values_host_docker_internal}:9411"
      spring.zipkin.service.name: "fhir-facade-application"
      spring.sleuth.enabled: "true"
      spring.zipkin.enabled: "true"
      logging.level.zipkin2: "FATAL"

      #adapter
      adapter.timeout: "10000"

      #multi tenancy
      spring.profiles.active: "remote"
      multi.tenancy.enabled: "true"
      adapter.personservice.url: "http://person-service-application-example-tenant-%TENANT_ID%:50800"

      #secrets
      adapter.personservice.user: "YWRtaW4="
      adapter.personservice.password: "YWRtaW4="

      #log levels
      logging.level.root: "WARN"
      logging.level.org.goafabric: "INFO"
      logging.level.org.springframework: "INFO"

    depends_on:
      - person-service-application-example-tenant-0
      - person-service-application-example-tenant-5a2f

  callee-service-application:
    container_name: callee-service-application
    image: goafabric/callee-service-go:1.0.0
    restart: 'no'
    ports:
      - "50900"
    networks:
      - ${_Values_root_name}-net

  person-service-application-example-tenant-0:
    container_name: person-service-application-example-tenant-0
    image:  goafabric/person-service-native${_Values_server_arch}:3.0.2
    restart: 'no'
    ports:
      - "50800"
    command: ["-Xmx32M"]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "50800"
      server.tomcat.threads.max: "20"
      server.forward-headers-strategy: FRAMEWORK

      #security
      security.authentication.enabled: "false"

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.application.name: "person-service-application-example-tenant-0"
      management.zipkin.tracing.endpoint: "http://${_Values_host_docker_internal}:9411/api/v2/spans"
      management.tracing.sampling.probability: "1.0"
      management.tracing.enabled: "true"
      logging.level.zipkin2.reporter: "ERROR"

      #persistence
      database.provisioning.goals: "-import-demo-data"

      #adapter
      adapter.calleeservice.url: "http://callee-service-application:50900"
      adapter.calleeservice.timeout: "10000"

  person-service-application-example-tenant-5a2f:
    container_name: person-service-application-example-tenant-5a2f
    image: goafabric/person-service-native${_Values_server_arch}:3.0.2
    restart: 'no'
    ports:
      - "50800"
    command: [ "-Xmx32M" ]

    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "50800"
      server.tomcat.threads.max: "20"
      server.forward-headers-strategy: FRAMEWORK

      #security
      security.authentication.enabled: "false"

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.application.name: "person-service-application-example-tenant-5a2f"
      management.zipkin.tracing.endpoint: "http://${_Values_host_docker_internal}:9411/api/v2/spans"
      management.tracing.sampling.probability: "1.0"
      management.tracing.enabled: "true"
      logging.level.zipkin2.reporter: "ERROR"

      #persistence
      database.provisioning.goals: "-import-demo-data"

      #adapter
      adapter.calleeservice.url: "http://callee-service-application:50900"
      adapter.calleeservice.timeout: "10000"

  nginx:
    container_name: ${_Values_root_name}-nginx
    image: nginx:1.22.1
    restart: 'no'
    ports:
      - 8080:80
#      - 444:443
    networks:
      - ${_Values_root_name}-net
    volumes:
      - ./nginx/nginx${_Values_nginx_oidc}.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/
    depends_on:
      application:
        condition: service_started

volumes:
    tmp:
    applogs:

networks:
  fhir-facade-net:
    driver: bridge
